#
# Yet Another UserAgent Analyzer
# Copyright (C) 2013-2019 Niels Basjes
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
config:

# =============================
# Use all Step functions
# Needed to verify serialization
# =============================

# FIXME: DROP THIS FILE WHEN FINISHED DEVELOPING THIS

#- matcher:
#    options:
#    - 'verbose'
##    variable:
##    - 'Foo: agent.product.name^.version'
#    require:
#      - 'agent.(1)product.(1)name="Foo"'
#
#    #    - 'agent.(6)product.name{"StartsWithThis"'    #path{value
##    - 'agent.(4-5)product.name="IsThisExactly"'   #path=value
##    - 'agent.(2-3)product.name[-3]="123"'         #path[n]=value
##    - 'agent.(1)product.name'                     #path          exists
#    extract:
##    - 'Foo: 1 : @Foo^.comments.entry.product.version'
#      - 'Fixed                :    1 : "Fixed"'
#      - 'Agent                :    1 : agent'
#      - 'AgentProduct1        :    1 : agent.(1)product'
#      - 'AgentProduct2        :    1 : agent.(2)product'
#      - 'AgentProduct         :    1 : agent.(1)product'
#      - 'AgentProductName     :    1 : agent.(1)product.(1)name'
#      - 'AgentProductVersion  :    1 : agent.(1)product.(1)version'
#      - 'AgentProductComments :    1 : agent.(1)product.(1)version^.comments.entry.product.name="FooComment"'
#
#- test:
#    options:
#    - 'verbose'
#    input:
#       user_agent_string                    : 'Foo/1.0 (FooComment/2) Bar/3 (BarComment/4)'
#    expected:
##        Foo : 'Foos'
#      Fixed                             : 'Fixed'
#      Agent                                 : 'Foo/1.0 (FooComment/2) Bar/3 (BarComment/4)'
#      AgentProduct1                         : 'Foo/1.0 (FooComment/2)'
#      AgentProduct2                         : 'Bar/3 (BarComment/4)'
#      AgentProduct                         : 'Foo/1.0 (FooComment/2)'
#      AgentProductName                     : 'Foo'
#      AgentProductVersion                  : '1.0'
#      AgentProductComments                 : 'FooComment'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#        - 'StartsT:   1:  agent.(1)product.(1)comments.(1-5)entry.product.(1)name{"T"^.version'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#        - 'StartsTh:   1:  agent.(1)product.(1)comments.(1-5)entry.product.(1)name{"Th"^.version'
#
#
#- test:
#    options:
#      - 'verbose'
#    input:
#      user_agent_string: 'Mozilla/5.0 (One/111; Two/222; Three/333; Four/444)'
#    expected:
#          One: "Mozilla"
#          Equals: "333"
#          StartsT: "222"
#          StartsTh: "333"
##          StartsThr: "333"
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'One:   1:  agent.(1)product.(1)name[1]'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'Two:   1:  agent.(1)product.(1)name[2]'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'OneTwo:     1:  agent.(1)product.(1)name[1-2]'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'TwoThree:   1:  agent.(1)product.(1)name[2-3]'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'TwoThreeFour:   1:  agent.(1)product.(1)name[2-4]'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'ThreeFourFive:   1:  agent.(1)product.(1)name[3-5]'
#
#- matcher:
#    options:
#      - 'verbose'
#    extract:
#      - 'FourFive:   1:  agent.(1)product.(1)name[4-5]'
#
#- test:
#    options:
#      - 'verbose'
#    input:
#      user_agent_string: 'One Two Three Four Five Six/1.0 (Something)'
#    expected:
#      One:           "One"
#      Two:           "Two"
#      OneTwo:        "One Two"
#      TwoThree:      "Two Three"
#      TwoThreeFour:  "Two Three Four"
#      ThreeFourFive: "Three Four Five"
#      FourFive:      "Four Five"
#



#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F01: 1 : agent.(1)product.(1)name="Name"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F02: 1 : agent.(1)product.(1)version="V1"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F03: 1 : agent.(1)product.(2)version="V2"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F04: 1 : agent.(1)product.(1)comments.(1)entry.(1)product="Versi0nName 1.0 (comment)"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F05: 1 : agent.(1)product.(1)comments.(1)entry.(1)product.(1)name="Versi0nName"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F06: 1 : agent.(1)product.(1)comments.(1)entry.(1)product.(1)version="1.0"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F07: 1 : agent.(1)product.(1)comments.(1)entry.(1)product.(1)comments="(comment)"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F08: 1 : agent.(1)product.(1)comments.(1)entry.(1)product.(1)comments.entry.(1)text="comment"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F09: 1 : agent.(1)product.(1)comments.(2)entry.(1)comments.entry.(1)text="nested comment"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F10: 1 : agent.(1)product.(1)comments.(3)entry.(1)email="em@il.nl"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F11: 1 : agent.(1)product.(1)comments.(4)entry.(1)url="http://web.site"'
    - matcher:
        options:
          - 'verbose'
        extract:
          - 'F12: 1 : agent.(1)product.(1)comments.(5)entry.(1)keyvalue.(1)key="keyText"'
    - matcher:
        options:
          - 'verbose'
        extract:
          - 'F13: 1 : agent.(1)product.(1)comments.(5)entry.(1)keyvalue.(2)text="text"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F14: 1 : agent.(1)product.(1)comments.(6)entry.(1)keyvalue.(1)key="keyEmail"'
    - matcher:
        options:
          - 'verbose'
        extract:
          - 'F15: 1 : agent.(1)product.(1)comments.(6)entry.(1)keyvalue.(2)email="em@il.nl"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F16: 1 : agent.(1)product.(1)comments.(7)entry.(1)keyvalue.(1)key="keyWeb"'
    - matcher:
        options:
          - 'verbose'
        extract:
          - 'F17: 1 : agent.(1)product.(1)comments.(7)entry.(1)keyvalue.(2)url="http://web.site"'
#    - matcher:
#        options:
#          - 'verbose'
#        extract:
#          - 'F18: 1 : agent.(1)product.(1)comments.(8)entry.(1)keyvalue.(1)key="keyUuid"'
    - matcher:
        options:
          - 'verbose'
        extract:
          - 'F19: 1 : agent.(1)product.(1)comments.(8)entry.(1)keyvalue.(2)uuid="A43F3165-FAC1-11E1-8828-00123F6EDBB1"'

    - test:
        options:
          - 'verbose'
        input:
          name: 'Comment fields'
          user_agent_string:  'Name V1/V2 (Versi0nName 1.0 (comment); (nested comment) ; em@il.nl ; http://web.site ; keyText=text ; keyEmail=em@il.nl ; keyWeb=http://web.site ; keyUuid={A43F3165-FAC1-11E1-8828-00123F6EDBB1})'
        expected:
#          F01: "Name"
#          F02: "V1"
#          F03: "V2"
#          F04: "Versi0nName 1.0 (comment)"
#          F05: "Versi0nName"
#          F06: "1.0"
#          F07: "(comment)"
#          F08: "comment"
#          F09: "nested comment"
#          F10: "em@il.nl"
#          F11: "http://web.site"
#          F12: "keyText"
          F13: "text"
#          F14: "keyEmail"
          F15: "em@il.nl"
#          F16: "keyWeb"
          F17: "http://web.site"
#          F18: "keyUuid"
          F19: "A43F3165-FAC1-11E1-8828-00123F6EDBB1"

